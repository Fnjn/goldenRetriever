[facenet]
# Path to the data directory containing aligned face patches.
alignedDir = /aligned

# Number of images to process in a batch in the test set.
batch_size = 100

# Could be either a directory containing the meta_file and ckpt_file or a model protobuf (.pb) file
#model = /models/20170512-110547
#model = /models/20170511-185253
model = /models/20180402-114759
#model = /models/20180408-102900

# Aligned Image size (height, width) in pixels.
image_size = 160

# The file extension for the LFW dataset.', default='png', choices=['jpg', 'png']
file_ext = png

# A distance of faces that decides whether they are different persons or not
threshold = 0.9


[searchFaces]
# Path to the data directory containing aligned face patches.
alignedDir = /alignedSearchDir

# Number of images to process in a batch in the test set.
batch_size = 100

# Could be either a directory containing the meta_file and ckpt_file or a model protobuf (.pb) file
#model = /models/20170512-110547
#model = /models/20170511-185253
model = /models/20180402-114759
#model = /models/20180408-102900

# Aligned Image size (height, width) in pixels.
image_size = 160

# The file extension for the LFW dataset.', default='png', choices=['jpg', 'png']
file_ext = png

# A distance of faces that decides whether they are different persons or not
threshold = 0.9

# Filename of the serialized Tree that was trained for quick faces search
search_tree = trainTree

[align]
# Directory with unaligned images.
unalignedDir = /UploadedFiles/

# Directory with unaligned images.
alignedDir = /aligned/

# File containing the dlib face predictor.
dlib_face_predictor = /shape_predictor_68_face_landmarks.dat

# Image size (height, width) in pixels.
image_size = 160

# Size of the face thumbnail (height, width) in pixels.
face_size = 96

# The amount of scaling to apply to prealigned images before taking the center crop.
prealigned_scale = 0.87

# Use the center crop of the original image after scaling the image using prealigned_scale.
use_center_crop = true

# Replace image with a pre-aligned version when face detection fails.
prealigned_dir = /prealigned/


[align-mtcnn]
# Directory with unaligned images.
unalignedDir = /UploadedFiles/

# Directory with aligned face thumbnails.
alignedDir = /aligned/

# Image size (height, width) in pixels.', default=182
image_size = 160

# Margin for the crop around the bounding box (height, width) in pixels
#margin = 32
margin = 0

# Shuffles the order of images to enable alignment using multiple processes.
random_order = true

# Upper bound on the amount of GPU memory that will be used by the process.
gpu_memory_fraction = 0.85

# Unaligned directory contains sub-directories for labeled images
has_class_dir = false

[align-search]
# Directory with unaligned images.
unalignedDir = /SearchDir/

# Directory with aligned face thumbnails.
alignedDir = /alignedSearchDir/

# Image size (height, width) in pixels.', default=182
image_size = 160

# Margin for the crop around the bounding box (height, width) in pixels
margin = 0

# Shuffles the order of images to enable alignment using multiple processes.
random_order = true

# Upper bound on the amount of GPU memory that will be used by the process.
gpu_memory_fraction = 0.85

# Unaligned directory contains sub-directories for labeled images
has_class_dir = true
